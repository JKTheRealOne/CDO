@model Discipline
@using CDO.Data
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";
}

<h1>Подробности</h1>

<div>
    <h4>Дисциплина</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Disciplinename)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Disciplinename)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UsercdNavigation.Fio)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UsercdNavigation.Fio)
        </dd>
        @{
            var theme = Model.Themes.FirstOrDefault();
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(x => theme.Themename)
                        </th>
                        <th>
                            @Html.DisplayNameFor(x => theme.Themevolume)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Themes)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Themename)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Themevolume)
                            </td>
                            @{
                                var roles = ((ClaimsIdentity)User.Identity).Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
                                if (roles.Contains("Admin") | roles.Contains("Teacher"))
                                {
                                    <td>
                                        <a asp-action="Edit" asp-controller="Theme" asp-route-cd="@item.Themecd">Изменить</a> |
                                        <a asp-action="Delete" asp-controller="Theme" asp-route-cd="@item.Themecd">Удалить</a> |
                                    </td>
                                }
                            }
                            <td>
                                @{
                                    using var dbcontext = new PostgresContext();
                                    var id = dbcontext.Tests.Where(x => x.Themecd == item.Themecd).Select(y => y.Testcd);

                                }
                                <a asp-action="Details" asp-controller="Theme" asp-route-cd="@item.Themecd">Подробности</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </dl>
</div>
@{
    var role = ((ClaimsIdentity)User.Identity).Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
    if (role.Contains("Admin") | role.Contains("Teacher"))
    {
        <div>
            <a asp-action="Edit" asp-controller="Discipline" asp-route-cd="@Model.Disciplinecd">Редактировать</a> |
        </div>
    }
    <div>
    <a asp-action="Index" asp-controller="Discipline">Вернуться</a>
    </div>
}
